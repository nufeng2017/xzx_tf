//app.jsvar
var util = require('./utils/util.js');
var aldstat = require("./utils/ald-stat.js");
App({
  onLaunch: function () {
    var that = this;
    var local = util.cacheGet('local');
    if (local) {
      this.globalData.city = local.city;
      this.globalData.cityname = local.cityname;
    }
    wx.login({
      success: function (res) {
        if (res.code) {
          //util.cachePut('code',res.code);
          var data = {};
          data.code = res.code;
          data.city = that.globalData.city;
          util.apiRequest('5aab83c0900a9', 'GET', data, function (res) {
            if (res.data.code == '1') {
              //console.log('openid：'+res.data.data.openid);
              util.cachePut('openid', res.data.data.openid);
            }
          },true);
        }
      }
    });
    wx.checkSession({
      fail: function () {
        wx.login({
          success: function (res) {
            if (res.code) {
              util.cachePut('code', res.code);
            }
          }
        });
      }
    })
    wx.getSystemInfo({
      success: function (res) {
        if (res.model == "iPhone X (GSM+CDMA)<iPhone10,3>") {
          that.globalData.isIPX = true;
        }
      }
    })
  },
  onShow: function (options) {
    var that = this;
    var scene = decodeURIComponent(options.query.scene);
    if (scene) {
      var sceneArr = scene.split('_');
      if (sceneArr.length == 5) {
        options.query.city = sceneArr[4];
      }
    }
    this.changeCity(options.query.city);
  },
  changeCity:function(city){
    var that = this;
    if (city && city != this.globalData.city) {
      that.globalData.city = city;
      var data = { 'city': city };
      util.apiRequest('5a14d60574204', 'GET', data, function (res) {
        if (res.data.code == '1') {
          var local = {};
          res.data.data.forEach(function (val, index, arr) {
            if (val.city == city) {
              local.city = val.city;
              local.cityname = val.city_name;
            }
          })
          util.cachePut('local', local);
          that.globalData.city = local.city;
          that.globalData.cityname = local.cityname;
          that.getConfig();
        }
      });
    } else {
      this.getConfig();
    }
  },
  getShareReturn: function (title, path, imageUrl){
    var obj = {};
    obj.title = title;
    obj.path = path;
    if (imageUrl)  obj.imageUrl = imageUrl;
    return obj;
  },
  getConfig: function (){
    var that = this;
    var city = this.globalData.city;

    let promise = new Promise(function (resolve) {
      var cacheKey = city + 'config';
      var config = util.cacheGet(cacheKey);
      if (config) {
        that.globalData.config = config;
        resolve(config);
      } else {
        var data = { 'city': city };
        util.apiRequest('58c8fdaa79e80', 'GET', data, function (res) {
          if (res.data.code == '1') {
            var config = res.data.data;
            that.globalData.config = config;
            util.cachePut(cacheKey, config, 7200);
            resolve(config);
          }
        });
      }
    });
    return promise;
  },
  formatSpecial: function (special, limit, business_key, house_comefrom){
    var limit = limit || 0;
    var that = this;
    var specialArr = new Array();
    if (special) specialArr = special.split(',');
    var res = new Array();
    if (specialArr.length > 0) {
      specialArr.forEach(function (val, index, arr) {
        var id = val;
        if (that.globalData.config.special) {
          that.globalData.config.special.forEach(function (v, i, a) {
            if (v['key'] == val) res[index] = v['value'];
          });
        }
      });
    }
    if (business_key && business_key == 999){
      res.unshift('爱租月付');
    }
    if (house_comefrom) {
      if (house_comefrom == '1') res.unshift('公寓');
      if (house_comefrom == '2') res.unshift('个人好房');
    }
    return limit>0?res.slice(0, limit):res;
  },
  globalData: {
    userinfo:{},
    from:'6',
    city: 'nj',
    cityname: '南京',
    config: {}, //业务相关配置数据，已初始化,尽量使用appInstance.getConfig(function())回调避免异步问题
    isIPX:false,
    unit: {
      '0': '元/月',
      '1': '元/月',
      '2': '元/天*平方米',
      '3': '元/天'
    },
    equipment:{
      '床':'/taofang-package/img/床.png',
      '冰箱':'/taofang-package/img/冰箱.png',
      '电视': '/taofang-package/img/电视.png',
      '空调': '/taofang-package/img/空调.png',
      '洗衣机': '/taofang-package/img/洗衣机.png',
      '热水器': '/taofang-package/img/热水器.png',
      '家具': '/taofang-package/img/家具.png',
      '宽带': '/taofang-package/img/宽带.png',
      '可做饭': '/taofang-package/img/可做饭.png',
      '独立卫生间': '/taofang-package/img/独立卫生间.png',
      '客梯': '/taofang-package/img/客梯.png',
      '货梯': '/taofang-package/img/货梯.png',
      '暖气': '/taofang-package/img/暖气.png',
      '停车位': '/taofang-package/img/停车位.png',
      '水': '/taofang-package/img/水.png',
      '燃气': '/taofang-package/img/燃气.png',
      '网络': '/taofang-package/img/网络.png',
      '办公家具': '/taofang-package/img/办公家具.png',
      
      

    }
  },
  fn:{//一些公用的函数
    deepClone:function(obj){//深克隆对象
      var o = {};
      var str = JSON.stringify(obj);
      o = JSON.parse(str);
      return o;
    },
  },
  getUtil: util
})