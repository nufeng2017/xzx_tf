var app = getApp();
var that;
var publish = true;
var lastPage;
var publishObj;
var houseTypeKey;
var houseType;
var house_mating;

Page({

  /**
   * 页面的初始数据
   */
  data: {

    showHouseEquipment:false,
    publish:false,
    houseTypeKey:'',
    equipment:[],
    selected:{},
    publishObj:{},
    notice: '（选填）详细的描述会大大增加快速出租的机会！可以介绍交通和周边环境，入住时间，对租客的要求等提升吸引力。',
    sex:['先生','女士'],
    sexChoose:'先生',
    showPhone:false,

    mobile: '',
    code: '',
    codename: '获取验证码',
    codedisable: false,

    
  },

  onUnload(){

    lastPage.setData({
      publishObj:this.data.publishObj
    })
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    
    that = this
    let pages = getCurrentPages();
    lastPage = pages[pages.length - 2]; //上一个页面
    publishObj = lastPage.data.publishObj
    publish = lastPage.data.publish //true：发布 false:编辑
    houseType = lastPage.data.houseType
    houseTypeKey = lastPage.data.house_TypeK // 缓存数据的key
    house_mating = publishObj.house_mating

    var cacheKey = app.getUtil.getUserinfoKey();
     let userinfo = app.getUtil.cacheGet(cacheKey);
    publishObj.phone = userinfo.passport_phone

    var temp = {};
    house_mating.forEach(function (val, index, arr) {
      temp[val] = true;
    })

    wx.setNavigationBarTitle({
      title: houseType,
    })

    let equipment = []
    let showHouseEquipment = false
    if (houseType == "住宅"){
      
      equipment = app.getUtil.cacheGet('initConfig').house_equipment_map["1"]
      showHouseEquipment=true

    }else if (houseType == "别墅"){
       
        showHouseEquipment= true,
        equipment= app.getUtil.cacheGet('initConfig').house_equipment_map["2"]

    }else if(houseType == "商铺"){
      
        showHouseEquipment= true,
        equipment= app.getUtil.cacheGet('initConfig').house_equipment_map["3"]
    }
    else if(houseType == '写字楼'){

        showHouseEquipment= true,
        equipment= app.getUtil.cacheGet('initConfig').house_equipment_map["4"]
    }

    let sex = '先生'
    if (publishObj.contact.indexOf("女士") > -1) {

      　　sex = '女士'

    }

    this.setData({
      selected: temp,
      showHouseEquipment: showHouseEquipment,
      equipment: equipment,
      publishObj: publishObj,
      publish:publish,
      houseTypeKey: houseTypeKey,
      sexChoose:sex
      

    })

    if(publish){
      console.log('true')
    }else{
      console.log('false')
    }
  },

  editePushObj(key) {//当为发布时 保存数据

    if (publish) {

      let arr = app.getUtil.cacheGet(key)
      // console.log(arr);
      for (let index in arr) {//找到对应的
        if (arr[index].uid == this.data.publishObj.uid) {
          arr.splice(index, 1, this.data.publishObj)

          break;
        }
      }
      app.getUtil.cachePut(key, arr)
    }
  },
  changeTitle(e){

    console.log(e);
    let title = "publishObj.title"

    
    this.setData({
      [title]:e.detail.value
    })

    publishObj.title = e.detail.value

    this.editePushObj(houseTypeKey)
  },

  addItem(e){

    
    console.log(e.currentTarget.dataset.item)
    let item = e.currentTarget.dataset.item

    let index = house_mating.indexOf(item)
   

    if ('-1' == index){
        house_mating.unshift(item)

     }else{
      house_mating.splice(index, 1);
     }

     publishObj.house_mating = house_mating

    var temp = {};
    house_mating.forEach(function (val, index, arr) {
      temp[val] = true;
    })
    // console.log(temp);


     this.setData({
       publishObj:publishObj,
       selected:temp,
      //  equipment: app.getUtil.cacheGet('initConfig').house_equipment_map["1"]
     })

     console.log(this.data.selected)

     this.editePushObj(houseTypeKey)

    

  }
,
  changeSex(e){

    console.log(e);
    let contact = this.data.publishObj.contact
    if(contact.length>0){
      contact = contact.substring(0, contact.length - 2) + e.currentTarget.dataset.txt
    }
    publishObj.contact = contact
    

    this.setData({
      sexChoose:e.currentTarget.dataset.txt,
      publishObj:publishObj

    })

  },

  savePublishObj(){
    publishObj = this.data.publishObj

  },

  changeContact(e){

    console.log(e.detail.value)
    let value = e.detail.value

    let index = value.indexOf(this.data.sexChoose)
    
    if (index > -1){
      
      value = value.replace(this.data.sexChoose,"")
       
    }

    publishObj.contact = value + this.data.sexChoose 
    
      
    
    
    console.log(publishObj.contact )

    this.setData({
      publishObj:publishObj
    })
    // this.editePushObj(houseTypeKey)

  },

  changePhone(){
    this.setData({
      showPhone:true
    })
  },

  getCode(){

    if (!this.check()) return false;
    if (this.data.codedisable) return false;
    var that = this;

  },

  check: function () {

    if (this.data.mobile.length != 11) {
      wx.showToast({
        title: '请输入正确的11位手机号码',
        icon: 'none',
        duration: 1000
      })

      return false;
    }
    return true;
  },

  cancelAction(){

    this.setData({
      showPhone: false
    })
  },

  sureAction(){

    this.setData({
      showPhone: false
    })

  },
  //新手机号
  inputNewPhone(e){

    this.setData({ 'mobile': e.detail.value });

  },
  // 验证码
  changeCode(e){
    this.setData({ 'code': e.detail.value });
  },

  //验证码已发送倒计时
  codeSuccess: function () {

    this.setData({
      codedisable: true
    })
    var that = this;
    var i = 61;
    var timer = setInterval(function () {
      i -= 1;
      if (i < 1) {
        that.setData({ 'codename': '重新获取' });

        that.setData({
          codedisable: false
        })
        clearInterval(timer);
      } else {
        that.setData({ 'codename': i + 's' });
      }
    }, 1000);
  },
  
})