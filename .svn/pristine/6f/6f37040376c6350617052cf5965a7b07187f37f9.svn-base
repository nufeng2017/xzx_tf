
var app= getApp();

//选择了但没点确定用的零时变量

let tempBuildingNum='';
let tempUnitNum='';
let tempRoomNum='';
let tempAreaC='';
let tempRentPriceC = ''
let tempFee = ''
let tempPriceUnit = ''

Page({
  data:{
    isShowModel:'hide',//是否显示模态框
    isAuthenticate: false,//是否去认证,调用函数isAuthenticate
    floorType: [//弹窗选择单层还是跃层 按月还是按天
      { name: '单层', value: '单层', checked: 'true' },
      { name: '跃层', value: '跃层' }
    ],
    unitType:[
      {name:'按月', 'value':'按月',checked:'true'},
      {name:'按天','value':'按天'}
    ],

    chooseFloorType:'单层',
    keyboardNum:['1','2','3','4','5','6','7','8','9','.','0','cancel'],//弹窗键盘按键
    houseTypeArr: [['1室', '2室', '3室', '4室', '5室', '6室', '7室', '8室', '9室', '10室'], ['0厅', '1厅', '2厅', '3厅', '4厅', '5厅', '6厅', '7厅', '8厅', '9厅', '10厅'], 
      ['0卫', '1卫', '2卫', '3卫', '4卫', '5卫', '6卫', '7卫', '8卫', '9卫', '10卫']],
      signleLayArr:[],
      duobleLayArr:[],
    listNum:[[]],
    
    publish:false,//是否是发布页面
    houseType:'',//是住宅、别墅...
    house_TypeK:'',

    chooseType:'',//当前选中的是 户型、朝向还是楼层等
    topArr:[],
    bottomArr:[],//楼栋号、单元号、室号
    showArr:[],//弹框显示的头部内容
    noticeText: '',//请选择厅室数量、请输入楼栋号、请输入房屋面积、请输入房间面积、请输入月租金、请选择楼层...
    showBoard: false, //是否显示弹出的键盘
    showSingleOrDou:false,//是否显示单层跃层
    list:[],//面积月租金
    moreChoose:'',//选中的主卧...  月付....
    value:[],//设置默认值
    
    //========需要提交的数据
    
      
      publishObj: {
        scenario: 'api',
        uid: '',
        house_type: '',      //房屋类型 1
        block_name:'',
        district: '',      //区属
        street_id: '',      //版块
        street:'',
        room:'',
        hall:'',
        toilet:'',
        // forward:'',
        floor: '',       //单层
        floor_start: '', //跃层start
        floor_end: '', 
        floor_total:'',
        floor_is_yc: false,//是否跃层
        building_num: '',   //楼栋门牌-栋
        unit_num: '',       //楼栋门牌-单元
        room_num: '',       //楼栋门牌-室
        shop_type:'',
        house_property: {
          is_open: false  ,             //是否展开
          owner_contract_type: '',       //证件类型 4
          owner_land_right_number: '',  //丘权号
          owner_name: '',               //产权人姓名
          owner_contract_number: '',    //证件号码
          owner_identity_card_number: '',    //产权人身份证
          owner_pics: []                 //照片
        },

        houseArr:[2,1,1],//默认户型选择
        forwardArr:[0],//默认选中朝向
        floorSArr:[1,1],//默认单层选中
        floorDArr:[0,1,1],//默认跃层选中

        rent_type: '',    //出租方式 1
        room_type: '',     //卧室类型
        sex: '',        //租宅性别
        room: '',        //户型室
        hall: '',        //户型厅
        toilet: '',      //户型卫
        build_area: '',  //户型面积
        register_company: false, //可注册公司
        showRegister: '',//显示是否可以注册公司
        price: '',       //租金
        price_unit: '1',  //租金单位
        price_type: '',  //付款方式
        
        floor: '',       //单层
        floor_start: '', //跃层start
        floor_end: '',   //跃层end
        floor_total: '',  //共计层
        fitment_name: '', //装修类型
        forward_name: '', //装修朝向
        fee: '',          //物业费
        house_mating: [], //房源配套
        house_mating_check: false,//配套设施全选/全无
        house_mating_uncheck: false,
        car_attr: '1',
        title: '',       //标题
        detail_content: '',     //详情介绍
        house_pics: [],  //房源照片
        contact: '',     //联系人
        phone: '',       //手机号码
        code: '',        //验证码
        phone_safe: false,//手机隐私保护
        allow_rule: true,//我同意阅读
        isNewRecord: 1,
        virtual: {
          has_bind: 0,
          is_show: 0
        },
        new_block_valid: false,
        is_gfz_block: false


      },
    



    //========


  },
  onShow(){
    console.log(this.data.publishObj);
  },

  init(option){

    let uid = 'publishObj.uid'
    let changeUid = app.getUtil.cacheGet('changeUid')
    var houseType = app.getUtil.cacheGet('initConfig').house_type_map;
    var key = findKey(houseType, option.houseType)
    this.setData({
      [uid] : changeUid,
      house_TypeK: '发布_' +option.houseType

    })
    console.log(key);
    switch (parseInt(key)) {//1、住宅2、别墅3、写字楼4、商铺5、厂房仓库6、车库车位7
      case 1:
        {
          let arr = app.getUtil.cacheGet('发布_住宅')

          if(arr){
            console.log(arr)
            
            let hasBody = false
            let obj = {}
              for(let index in arr){
                console.log(index)
                if(arr[index].uid == changeUid){
                  
                    hasBody = true;
                    obj = arr[index];
                    console.log(obj);
                    break;
                }
              }
              if(hasBody ){//本地保存了数据
              console.log(hasBody);
                let room = obj.room;
                let hall = obj.hall;
                let toilet = obj.toilet;
                let allType = room+hall+toilet;
                let floor = obj.floor_is_yc ? (obj.floor_start!=''? (obj.floor_start + '-' + obj.floor_end + '/'+obj.floor_total):''):obj.floor
                let floorType = [//弹窗选择单层还是跃层 按月还是按天
                 
                ]
                if(obj.floor_is_yc){
                  floorType = [{ name: '单层', value: '单层' },
                    { name: '跃层', value: '跃层', checked: 'true' }]
                }else{
                  floorType = [{ name: '单层', value: '单层', checked: 'true' },
                    { name: '跃层', value: '跃层' }]
                }

                this.setData({
                  topArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': obj.forward_name }, { 'name': '楼层', 'value': floor }],
                  bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
                  houseType: option.houseType,
                  publishObj:obj,
                  floorType : floorType


                });

                console.log(this.data.publishObj)
              }else{//本地没有对应的缓存
                arr.push(this.data.publishObj)//添加新的uid对应的数据
                console.log(arr);
                app.getUtil.cachePut('发布_住宅',arr)
                this.setData({
                  topArr: [{ 'name': '户型', 'value': '' }, { 'name': '朝向', 'value': '' }, { 'name': '楼层', 'value': '' }],
                  bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }],
                  houseType: option.houseType

                });
              } 
          }else{//没有缓存

            app.getUtil.cachePut('发布_住宅', [this.data.publishObj])
            this.setData({
              topArr: [{ 'name': '户型', 'value': '' }, { 'name': '朝向', 'value': '' }, { 'name': '楼层', 'value': '' }],
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }],
              houseType: option.houseType

            });
          }

          
        }
        
        break;
      case 2:{

        let arr = app.getUtil.cacheGet('发布_别墅')
        if (arr) {
          let changeUid = this.data.publishObj.uid
          let hasBody = false
          let obj = {}
          for (let index in arr) {
            if (arr[index].uid == changeUid) {
              hasBody = true;
              obj = arr[index];
              break;
            }
          }
          if(hasBody){
            let room = obj.room;
            let hall = obj.hall;
            let toilet = obj.toilet;
            let allType = room + hall + toilet;
            let floor = obj.floor_is_yc ? (obj.floor_start != '' ? (obj.floor_start + '-' + obj.floor_end + '/' + obj.floor_total) : '') : obj.floor

            let floorType = [//弹窗选择单层还是跃层 按月还是按天

            ]
            if (obj.floor_is_yc) {
              floorType = [{ name: '单层', value: '单层' },
              { name: '跃层', value: '跃层', checked: 'true' }]
            } else {
              floorType = [{ name: '单层', value: '单层', checked: 'true' },
              { name: '跃层', value: '跃层' }]
            }

            this.setData({
              topArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': obj.forward_name }, { 'name': '楼层', 'value': floor }],
              bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
              houseType: option.houseType,
              publishObj: obj,
              floorType:floorType

            });

          }else{

            arr.push(this.data.publishObj)//添加新的uid对应的数据
            app.getUtil.cachePut('发布_别墅', arr)
            this.setData({
              topArr: [{ 'name': '户型', 'value': '' }, { 'name': '朝向', 'value': '' }, { 'name': '楼层', 'value': '' }],
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }],
              houseType: option.houseType

            });
          }

        }else{

          app.getUtil.cachePut('发布_别墅', [this.data.publishObj])

          this.setData({
            topArr: [{ 'name': '户型', 'value': '' }, { 'name': '朝向', 'value': '' }, { 'name': '楼层', 'value': '' }],
            houseType: option.houseType,
            bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
          });
        }

      }

      
        
        break;
      case 3:{

        let arr = app.getUtil.cacheGet('发布_写字楼')
        if (arr) {
          let changeUid = this.data.publishObj.uid
          let hasBody = false
          let obj = {}
          for (let index in arr) {
            if (arr[index].uid == changeUid) {
              hasBody = true;
              obj = arr[index];
              break;
            }
          }

          if(hasBody){
            let floor = obj.floor_is_yc ? (obj.floor_start != '' ? (obj.floor_start + '-' + obj.floor_end + '/' + obj.floor_total) : '') : obj.floor
            let floorType = [//弹窗选择单层还是跃层 按月还是按天

            ]
            if (obj.floor_is_yc) {
              floorType = [{ name: '单层', value: '单层' },
              { name: '跃层', value: '跃层', checked: 'true' }]
            } else {
              floorType = [{ name: '单层', value: '单层', checked: 'true' },
              { name: '跃层', value: '跃层' }]
            }

            this.setData({
              topArr: [{ 'name': '楼层', 'value': floor }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
              floorType:floorType,
              publishObj:obj

            })

          }else{
            arr.push(this.data.publishObj)//添加新的uid对应的数据
            app.getUtil.cachePut('发布_写字楼', arr)
            this.setData({
              topArr: [{ 'name': '楼层', 'value': '' }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
            })
          }

        }else{
          app.getUtil.cachePut('发布_写字楼', [this.data.publishObj])
          this.setData({
            topArr: [{ 'name': '楼层', 'value': '' }],
            houseType: option.houseType,
            bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
          })
        }


      }
        

        break;
      case 4:{
      //4、商铺5、厂房仓库6、车库车位7
        let arr = app.getUtil.cacheGet('发布_商铺')
        
        if (arr) {
          let changeUid = this.data.publishObj.uid
          let hasBody = false
          let obj = {}
          for (let index in arr) {
            if (arr[index].uid == changeUid) {
              hasBody = true;
              obj = arr[index];
              break;
            }
          }
          if(hasBody){
            let floor = obj.floor_is_yc ? (obj.floor_start != '' ? (obj.floor_start + '-' + obj.floor_end + '/' + obj.floor_total) : '') : obj.floor

            let floorType = [//弹窗选择单层还是跃层 按月还是按天

            ]
            if (obj.floor_is_yc) {
              floorType = [{ name: '单层', value: '单层' },
              { name: '跃层', value: '跃层', checked: 'true' }]
            } else {
              floorType = [{ name: '单层', value: '单层', checked: 'true' },
              { name: '跃层', value: '跃层' }]
            }

            this.setData({
              topArr: [{ 'name': '商业类型', 'value': obj.shop_type }, { 'name': '楼层', 'value': floor }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
              floorType:floorType,
              publishObj:obj
            })


          }else{
            arr.push(this.data.publishObj)//添加新的uid对应的数据
            app.getUtil.cachePut('发布_商铺', arr)
            this.setData({
              topArr: [{ 'name': '商业类型', 'value': '' }, { 'name': '楼层', 'value': '' }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
            })
          }

        }else{
          app.getUtil.cachePut('发布_商铺', [this.data.publishObj])
          this.setData({
            topArr: [{ 'name': '商业类型', 'value': '' }, { 'name': '楼层', 'value': '' }],
            houseType: option.houseType,
            bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
          })
        }

        
        }
        break;
      case 5:{

        let arr = app.getUtil.cacheGet('发布_厂房仓库')
        if (arr) {
          let changeUid = this.data.publishObj.uid
          let hasBody = false
          let obj = {}
          for (let index in arr) {
            if (arr[index].uid == changeUid) {
              hasBody = true;
              obj = arr[index];
              break;
            }
          }
          if(hasBody){
            this.setData({
              topArr: [{ 'name': '楼层', 'value': obj.floor }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
              publishObj:obj
            });

          }else{
            arr.push(this.data.publishObj)//添加新的uid对应的数据
            app.getUtil.cachePut('发布_厂房仓库', arr)
            this.setData({
              topArr: [{ 'name': '楼层', 'value': '' }],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
            });
          }

        }else{
          app.getUtil.cachePut('发布_厂房仓库', [this.data.publishObj])
          this.setData({
            topArr: [{ 'name': '楼层', 'value': '' }],
            houseType: option.houseType,
            bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
          });
        }
    
    }
        
        break;
      case 6:{
        let arr = app.getUtil.cacheGet('发布_车库车位')
        if (arr) {
          let changeUid = this.data.publishObj.uid
          let hasBody = false
          let obj = {}
          for (let index in arr) {
            if (arr[index].uid == changeUid) {
              hasBody = true;
              obj = arr[index];
              break;
            }
          }
          if(hasBody){
            
            this.setData({
              topArr: [],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': obj.building_num }, { 'name': '单元号', 'value': obj.unit_num }, { 'name': '室号', 'value': obj.room_num }],
              publishObj:obj
            });
          }else{

            arr.push(this.data.publishObj)
            app.getUtil.cachePut('发布_车库车位', arr)
            this.setData({
              topArr: [],
              houseType: option.houseType,
              bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
            });
          }

        }else{

          app.getUtil.cachePut('发布_车库车位', [this.data.publishObj])
          this.setData({
            topArr: [],
            houseType: option.houseType,
            bottomArr: [{ 'name': '楼栋号', 'value': '' }, { 'name': '单元号', 'value': '' }, { 'name': '室号', 'value': '' }]
          });
        }
      }
        
        break;


    }

    let all= [];
    for(var i=0;i<3;i++){
      let arr = [];
      for (var j = 1; j < 100; j++) {
        if(i<2){
          arr.push(j+'层')
        }else{
          arr.push('共'+j + '层')
        }
      }
      all.push(arr)
    }

    this.setData({
      signleLayArr:[all[0],all[2]],
      duobleLayArr:all
    })
    
      
  },

  onLoad(option){
    //设置标题

    if (option.houseType){
      wx.setNavigationBarTitle({
        title: option.houseType,
      })

      this.init(option)
      
    }
    //是否是发布
    if(option.publish){

      this.setData({
        publish:option.publish
      })
    }
    
    

  }

  
,

  onUnload() {
    console.log('离开');
    this.clearTemp()
  },
//清除零时变量
  clearTemp(){

    
    tempBuildingNum = '';
    tempUnitNum = '';
    tempRoomNum = '';
    tempAreaC = '';
    tempRentPriceC='';

  }
,
//弹框展现的样式
  isShowModel(e){

    // this.clearTemp();
    console.log(e)
    this.setData({
      isShowModel: e.currentTarget.dataset.modelstatus,
    })

    tempBuildingNum = this.data.publishObj.building_num;
    tempUnitNum = this.data.publishObj.unit_num;
    tempRoomNum = this.data.publishObj.room_num;
    tempAreaC = this.data.publishObj.build_area;
    tempRentPriceC = this.data.publishObj.price
    tempFee = this.data.publishObj.fee
    tempPriceUnit = this.data.publishObj.price_unit

    let type = e.currentTarget.dataset.type
    if ((this.data.houseType == '住宅' || this.data.houseType == '别墅')&& ((type == "户型") || (type == "朝向")||(type=="楼层"))){
      
      let hall = this.data.publishObj.hall
      let room = this.data.publishObj.room
      let toilet = this.data.publishObj.toilet
      let allType = room + hall+ toilet

      let forward = this.data.publishObj.forward_name

      

      let floor = this.data.publishObj.floor_is_yc ? (this.data.publishObj.floor_start != '' ? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total) : '') : this.data.publishObj.floor
      if(type=="户型"){
        
    
        console.log(this.data.publishObj.houseArr)
        this.setData({
          showArr: [{ 'name': '户型', 'value': allType}, { 'name': '朝向', 'value': forward }, { 'name': '楼层', 'value': floor }],
          chooseType: type,
          showBoard: false,
          listNum: this.data.houseTypeArr,
          noticeText: '请选择厅室数量',
          showSingleOrDou:false,
          value:this.data.publishObj.houseArr
        });
        

      }else if(type=="朝向"){
        // var that = this
        this.setData({
          showArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': forward }, { 'name': '楼层', 'value': floor }],
          chooseType: type,
          showBoard: false,
          listNum: [app.getUtil.cacheGet('initConfig').forward_map],
          noticeText:'请选择朝向',
          showSingleOrDou:false,
          value: this.data.publishObj.forwardArr
        });
        console.log(this.data.listNum);

      }else if(type=="楼层"){

        let arr = !this.data.publishObj.floor_is_yc ? this.data.signleLayArr : this.data.duobleLayArr

        let selectArr = this.data.publishObj.floor_is_yc?this.data.publishObj.floorDArr:this.data.publishObj.floorSArr

        this.setData({
          showArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': forward }, { 'name': '楼层', 'value': floor }],
          chooseType: type,
          showBoard: false,
          listNum: arr,
          noticeText:'请选择楼层',
          showSingleOrDou:true,
          value:selectArr
        });

      }
      

    } else if (this.data.houseType == '写字楼' && type == "楼层"){

      let arr = !this.data.publishObj.floor_is_yc ? this.data.signleLayArr : this.data.duobleLayArr
      let floor = this.data.publishObj.floor_is_yc ? (this.data.publishObj.floor_start!=''? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total):'') : this.data.publishObj.floor

      this.setData({
        showArr: [{ 'name': '楼层', 'value': floor }],
        chooseType: type,
        showBoard:false,
        listNum: arr,
        noticeText: '请选择楼层',
        showSingleOrDou: true
      });
    } else if (this.data.houseType == '商铺' && (type == '商业类型' || type =='楼层')){
      
      let floor = this.data.publishObj.floor_is_yc ? (this.data.publishObj.floor_start != '' ? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total) : '') : this.data.publishObj.floor
      
      if(type=='商业类型'){
        var shop_type_map = app.getUtil.cacheGet('initConfig').shop_type_map
        console.log(shop_type_map)
        let arr = []
        for(let i in shop_type_map){
          console.log(shop_type_map[i])
          arr.push(shop_type_map[i])
        }
        console.log(this.data.publishObj);
        console.log(this.data.publishObj.shop_type );

        this.setData({
          showArr: [{ 'name': '商业类型', 'value': this.data.publishObj.shop_type }, { 'name': '楼层', 'value': floor }],
          chooseType: type,
          showBoard: false,
          noticeText:'请选择商业类型',
          showSingleOrDou:false,
          listNum:[arr]
        });
      }else if(type=='楼层'){
        let arr = !this.data.publishObj.floor_is_yc ? this.data.signleLayArr : this.data.duobleLayArr
        this.setData({
          showArr: [{ 'name': '商业类型', 'value': this.data.publishObj.shop_type }, { 'name': '楼层', 'value': floor }],
          chooseType: type,
          showBoard: false,
          noticeText:'请选择楼层',
          showSingleOrDou:true,
          listNum:arr
          
        });
      }
      
      

    } else if (this.data.houseType == '厂房仓库' && type == '楼层'){
      let arr = this.data.chooseFloorType == '单层' ? this.data.signleLayArr : this.data.duobleLayArr
      this.setData({
        showArr: [{ 'name': '楼层', 'value': this.data.publishObj.floor }],
        chooseType: type,
        showBoard:false,
        noticeText: '请选择楼层',
        showSingleOrDou: false,
        listNum: arr
      });
    }else if(type=='楼栋号'){

      this.setData({
        showArr:[{ 'name': '楼栋号', 'value': this.data.publishObj.building_num }, { 'name': '单元号', 'value': this.data.publishObj.unit_num }, { 'name': '室号', 'value': this.data.publishObj.room_num }],
        chooseType:type,
        showBoard:true,
        noticeText:'请输入楼栋号（选填）'
        })
    }else if(type=='单元号'){
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': this.data.publishObj.building_num }, { 'name': '单元号', 'value': this.data.publishObj.unit_num }, { 'name': '室号', 'value': this.data.publishObj.room_num }],
        chooseType: type,
        showBoard: true,
        noticeText:'请输入单元号（选填）'
      })
    }else if(type=='室号'){
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': this.data.publishObj.building_num }, { 'name': '单元号', 'value': this.data.publishObj.unit_num }, { 'name': '室号', 'value': this.data.publishObj.room_num }],
        chooseType: type,
        showBoard: true,
        noticeText:'请输入室号（选填）'

      })
    }else if(type=='租客性别'){
      let sex = app.getUtil.cacheGet('initConfig').sex_map
      this.setData({
        showArr:[{'name':'租客性别','value':this.data.publishObj.sex}],
        chooseType:type,
        showBoard:false,
        noticeText:'请选择租客性别',
        listNum:[sex],
        showSingleOrDou: false
      })
    }else if(type=='面积'){
      let list = app.getUtil.cacheGet('initConfig').rent_type_map
      this.setData({
        showArr: [{ 'name': '面积', 'value': this.data.publishObj.build_area}],
        chooseType:type,
        showBoard:true,
        noticeText:'请选择面积',
        list:list,
        moreChoose:this.data.publishObj.room_type
      })
    }else if(type=='月租金'){
      let list = app.getUtil.cacheGet('initConfig').price_type_map
      this.setData({
        showArr: [{ 'name': '月租金', 'value': this.data.publishObj.price }],
        chooseType: type,
        showBoard: true,
        noticeText: '请填写月租金',
        list:list,
        moreChoose:this.data.publishObj.price_type
        

      })
    }else if(type == "物业费"){

      this.setData({
        showArr: [{ 'name': '物业费', 'value': this.data.publishObj.fee }],
        chooseType: type,
        showBoard: true,
        noticeText: '请填写物业费'
      })
    }else if(type=="装修"){
      let fit = app.getUtil.cacheGet('initConfig').fitment_map
      this.setData({
        showArr: [{ 'name': '装修', 'value': this.data.publishObj.fitment_name}],
        chooseType:type,
        showBoard:false,
        noticeText:'请选择装修',
        listNum:[fit]
      })
    } else if (type =='可注册公司'){
    let value = ''
      if (this.data.publishObj.register_company){
        value = '是'
      }else{
        value = '否'
      }
      this.setData({
        showArr: [{ 'name':'可注册公司','value':value}],
        chooseType:type,
        showBoard:false,
        noticeText:'请选择可否注册公司',
        listNum:[["是","否"]]
      })
    }

    
  },

  //弹框顶部点击切换类型
  chooseTypeAction(e){
    console.log(e);
    console.log(e.currentTarget.dataset.name)

    let type = e.currentTarget.dataset.name
    
    this.clickFunction(type)
    

  },

  clickFunction(type){

    if (type == '户型') {
      this.setData({
        listNum: this.data.houseTypeArr,
        noticeText: '请选择厅室数量',
        chooseType: type,
        showSingleOrDou: false,
        showBoard: false,
        value:this.data.publishObj.houseArr
      })
      console.log(this.data.publishObj.houseArr)
      console.log(this.data.value)
    } else if (type == "朝向") {
      this.setData({
        listNum: [app.getUtil.cacheGet('initConfig').forward_map],
        noticeText: '请选择朝向',
        chooseType: type,
        showSingleOrDou: false,
        showBoard: false,
        value:this.data.publishObj.forwardArr
      })
    } else if (type == "楼层") {

      let arr = this.data.chooseFloorType == "单层" ? this.data.signleLayArr : this.data.duobleLayArr
      let selectArr = this.data.publishObj.floor_is_yc ? this.data.publishObj.floorDArr : this.data.publishObj.floorSArr

      this.setData({
        listNum: arr,
        noticeText: '请选择楼层',
        chooseType: type,
        showSingleOrDou: true,
        showBoard: false,
        value: selectArr
      })
    } else if (type == '楼栋号') {
      this.setData({
        showBoard: true,
        noticeText: '请输入楼栋号（选填）',
        chooseType: type
      })
    } else if (type == "单元号") {
      this.setData({
        showBoard: true,
        noticeText: '请输入单元号（选填）',
        chooseType: type
      })
    } else if (type == '室号') {
      this.setData({
        showBoard: true,
        noticeText: '请输入室号（选填）',
        chooseType: type
      })
    } else if (type == '商业类型') {

      var shop_type_map = app.getUtil.cacheGet('initConfig').shop_type_map
      let arr = []
      for (let i in shop_type_map) {
        console.log(shop_type_map[i])
        arr.push(shop_type_map[i])
      }
      this.setData({
        showBoard: false,
        noticeText: '请选择商业类型',
        listNum: [arr],
        showSingleOrDou: false,
        chooseType: type

      })
    }
  },

  uploadImg(){//上传照片选项
    let that = this

    wx.showActionSheet({
      itemList: ['拍照', '从手机相册选择'],
      success(res) {
        let sourceType = ['camera']
        if (res.tapIndex == 1) {
          sourceType[0] = "album"
        }
        wx.chooseImage({
          sizeType: ['original', 'compressed'],
          sourceType: sourceType,
          success(res) {
            // tempFilePath可以作为img标签的src属性显示图片
            let tempFilePaths = res.tempFilePaths
            let arr = []
            
            app.getUtil.uploadImages({
              path: tempFilePaths,
              uploadSuccess: r => {
                console.log(r)
                let data = JSON.parse(r.data);
                if (data.status == "success" && data.pic_url) {
                  

                  arr.concat(data.pic_url)
                }
              },
              uploadFail: function (r) {
                console.log(r);
              },
              complete(i) {
                console.log(i);
                let house_pics = "publishObj.house_pics"
                that.setData({
                  [house_pics]: tempFilePaths
                })

                wx.navigateTo({
                  url: '/taofang-package/pages/house-img/house-img',
                })
              }
            })


          }
        })
      }
    })
  },
  isAuthenticate(){
    wx.showModal({
      title: '提示',
      content: '您还不是实名认证用户实名认证可优先通过审核',
      cancelText: '继续发布',
      cancelColor: '#333',
      confirmText: '去认证',
      confirmColor: '#ff6f29',
      success(res) {
        if (res.confirm) {
          console.log('用户点击确定')
        } else if (res.cancel) {
          console.log('用户点击取消')
        }
      }
    })
  },


  editePushObj(key) {

    let arr = app.getUtil.cacheGet(key)
    console.log(arr);
    for (let index in arr) {//找到对应的
      if (arr[index].uid == this.data.publishObj.uid) {
        arr.splice(index, 1, this.data.publishObj)

        break;
      }
    }
    app.getUtil.cachePut(key, arr)
  },
  //列表选择
  bindChange(e){
    const val = e.detail.value
    console.log(val);
    if (this.data.houseType == '住宅' || this.data.houseType == '别墅'){

        if(this.data.chooseType=="户型"){
          let room =  this.data.houseTypeArr[0][val[0]]
          let hall = this.data.houseTypeArr[1][val[1]]
          let toilet = this.data.houseTypeArr[2][val[2]]
          let allType = room + hall + toilet
          console.log(allType);

          let floor = this.data.publishObj.floor_is_yc ? ((this.data.publishObj.floor_start) != '' ? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total) : '') : this.data.publishObj.floor
          
          let proom = "publishObj.room"
          let phall = "publishObj.hall"
          let ptoilet = "publishObj.toilet"
          let houseArr = 'publishObj.houseArr'
          console.log(val)
          this.setData({
            [proom]:room,
            [phall]:hall,
            [ptoilet]: toilet,
            [houseArr]:val,
            showArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': this.data.publishObj.forward_name}, {
              'name': '楼层', 'value': floor }],
            topArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': this.data.publishObj.forward_name }, {
              'name': '楼层', 'value': floor
            }],


          })

          if(this.data.houseType == '住宅'){
            this.editePushObj('发布_住宅')
          }else{
            this.editePushObj('发布_别墅')
          }
          
        } else if (this.data.chooseType == "朝向"){
          let forward = app.getUtil.cacheGet('initConfig').forward_map[val[0]]
          let pforward = "publishObj.forward_name"


          
          let allType = this.data.publishObj.room + this.data.publishObj.hall + this.data.publishObj.toilet;
          
          let floor = this.data.publishObj.floor_is_yc ? ((this.data.publishObj.floor_start) != '' ? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total) : '') : this.data.publishObj.floor

          let forwardArr = 'publishObj.forwardArr'
          this.setData({
            [pforward]:forward,
            showArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': forward }, {
              'name': '楼层', 'value': floor
            }],
            topArr: [{ 'name': '户型', 'value': allType }, { 'name': '朝向', 'value': forward }, {
              'name': '楼层', 'value': floor
            }],
            [forwardArr]:val
          })

          if (this.data.houseType == '住宅') {
            this.editePushObj('发布_住宅')
          } else {
            this.editePushObj('发布_别墅')
          }


        }else if(this.data.chooseType == '楼层'){

          let allType = this.data.publishObj.room + this.data.publishObj.hall + this.data.publishObj.toilet;

          let pfloor = "publishObj.floor"
          let pfloorStart = "publishObj.floor_start"
          let pfloorEnd = "publishObj.floor_end"
          let pfloorTotal = "publishObj.floor_total"

          let pfloorSArr = "publishObj.floorSArr"
          let pfloorDArr = "publishObj.floorDArr"

          let floor=''
          let sigStart=''
          let sigEnd=''
          let floorStart=''
          let floorEnd=''
          let floorTotal=''

          if (!this.data.publishObj.floor_is_yc){
            console.log('单')
            sigStart = parseInt(this.data.signleLayArr[0][val[0]].substr(0)) 
            sigEnd = parseInt(this.data.signleLayArr[1][val[1]].substr(1))
            floor =  sigStart + "/" + sigEnd

            this.setData({
              showArr: [{ 'name': '户型', 'value': allType },
              { 'name': '朝向', 'value': this.data.publishObj.forward_name },
              { 'name': '楼层', 'value': floor }],
              topArr: [{ 'name': '户型', 'value': allType },
              { 'name': '朝向', 'value': this.data.publishObj.forward_name },
              { 'name': '楼层', 'value': floor }],
              [pfloor]: floor,
              [pfloorStart]: floorStart,
              [pfloorEnd]: floorEnd,
              [pfloorTotal]: floorTotal,
              [pfloorSArr]:val

            })


          
          }else{
            console.log('双')
            floorStart = parseInt(this.data.duobleLayArr[0][val[0]].substr(0)) 
            floorEnd = parseInt(this.data.duobleLayArr[1][val[1]].substr(0)) 
            floorTotal = parseInt(this.data.duobleLayArr[2][val[2]].substr(1)) 
            floor= floorStart + '-' + floorEnd + '/' + floorTotal

            this.setData({
              showArr: [{ 'name': '户型', 'value': allType },
              { 'name': '朝向', 'value': this.data.publishObj.forward_name },
              { 'name': '楼层', 'value': floor }],
              topArr: [{ 'name': '户型', 'value': allType },
              { 'name': '朝向', 'value': this.data.publishObj.forward_name },
              { 'name': '楼层', 'value': floor }],
              [pfloor]: floor,
              [pfloorStart]: floorStart,
              [pfloorEnd]: floorEnd,
              [pfloorTotal]: floorTotal,
              [pfloorDArr]:val

            })
          }          
      
      
     
          

        if (this.data.houseType == '住宅') {
          this.editePushObj('发布_住宅')
         } else {
          this.editePushObj('发布_别墅')
        }

        }

      
    } else if (this.data.houseType == '商铺'){

        if(this.data.chooseType == '商业类型'){
          var shop_type_map = app.getUtil.cacheGet('initConfig').shop_type_map
          let arr = []
          for (let i in shop_type_map) {
            console.log(shop_type_map[i])
            arr.push(shop_type_map[i])
          }
          let shop_type = "publishObj.shop_type"

          let shopType =  arr[val[0]]

          let floor = this.data.publishObj.floor_is_yc ? ((this.data.publishObj.floor_start) != '' ? (this.data.publishObj.floor_start + '-' + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total) : '') : this.data.publishObj.floor

          this.setData({
            showArr: [{ 'name': '商业类型', 'value': shopType }, { 'name': '楼层', 'value': floor}],
            topArr: [{ 'name': '商业类型', 'value': shopType }, { 'name': '楼层', 'value': floor }],
            [shop_type]:shopType
          })


        }else if(this.data.chooseType == "楼层"){
 
          let pfloor = "publishObj.floor"
          let pfloorStart = "publishObj.floor_start"
          let pfloorEnd = "publishObj.floor_end"
          let pfloorTotal = "publishObj.floor_total"

          let pfloorSArr = "publishObj.floorSArr"
          let pfloorDArr = "publishObj.floorDArr"

          let floor = ''
          let sigStart = ''
          let sigEnd = ''
          let floorStart = ''
          let floorEnd = ''
          let floorTotal = ''

          if (!this.data.publishObj.floor_is_yc) {
            console.log('单')
            sigStart = parseInt(this.data.signleLayArr[0][val[0]].substr(0))
            sigEnd = parseInt(this.data.signleLayArr[1][val[1]].substr(1))
            floor = sigStart + "/" + sigEnd

            this.setData({
              showArr: [{ 'name': '商业类型', 'value': this.data.publishObj.shop_type},
              
              { 'name': '楼层', 'value': floor }],
              topArr: [{'name': '商业类型', 'value': this.data.publishObj.shop_type},

              { 'name': '楼层', 'value': floor }],
              [pfloor]: floor,
              [pfloorStart]: floorStart,
              [pfloorEnd]: floorEnd,
              [pfloorTotal]: floorTotal,
              [pfloorSArr]: val

            })



          } else {
            console.log('双')
            floorStart = parseInt(this.data.duobleLayArr[0][val[0]].substr(0))
            floorEnd = parseInt(this.data.duobleLayArr[1][val[1]].substr(0))
            floorTotal = parseInt(this.data.duobleLayArr[2][val[2]].substr(1))
            floor = floorStart + '-' + floorEnd + '/' + floorTotal

            this.setData({
              showArr: [
                { 'name': '商业类型', 'value': this.data.publishObj.shop_type },

                { 'name': '楼层', 'value': floor }],
              topArr: [{ 'name': '商业类型', 'value': this.data.publishObj.shop_type },

                { 'name': '楼层', 'value': floor }],
              [pfloor]: floor,
              [pfloorStart]: floorStart,
              [pfloorEnd]: floorEnd,
              [pfloorTotal]: floorTotal,
              [pfloorDArr]: val

            })
          }         


        }

      this.editePushObj('发布_商铺')
    }else if(this.data.houseType == '写字楼'){
      if (this.data.chooseType == "楼层") {

        let pfloor = "publishObj.floor"
        let pfloorStart = "publishObj.floor_start"
        let pfloorEnd = "publishObj.floor_end"
        let pfloorTotal = "publishObj.floor_total"

        let pfloorSArr = "publishObj.floorSArr"
        let pfloorDArr = "publishObj.floorDArr"

        let floor = ''
        let sigStart = ''
        let sigEnd = ''
        let floorStart = ''
        let floorEnd = ''
        let floorTotal = ''

        if (!this.data.publishObj.floor_is_yc) {
          console.log('单')
          sigStart = parseInt(this.data.signleLayArr[0][val[0]].substr(0))
          sigEnd = parseInt(this.data.signleLayArr[1][val[1]].substr(1))
          floor = sigStart + "/" + sigEnd

          this.setData({
            showArr: [

            { 'name': '楼层', 'value': floor }],
            topArr: [

            { 'name': '楼层', 'value': floor }],
            [pfloor]: floor,
            [pfloorStart]: floorStart,
            [pfloorEnd]: floorEnd,
            [pfloorTotal]: floorTotal,
            [pfloorSArr]: val

          })

        } else {
          console.log('双')
          floorStart = parseInt(this.data.duobleLayArr[0][val[0]].substr(0))
          floorEnd = parseInt(this.data.duobleLayArr[1][val[1]].substr(0))
          floorTotal = parseInt(this.data.duobleLayArr[2][val[2]].substr(1))
          floor = floorStart + '-' + floorEnd + '/' + floorTotal

          this.setData({
            showArr: [
              { 'name': '楼层', 'value': floor }],
            topArr: [
            { 'name': '楼层', 'value': floor }],
            [pfloor]: floor,
            [pfloorStart]: floorStart,
            [pfloorEnd]: floorEnd,
            [pfloorTotal]: floorTotal,
            [pfloorDArr]: val

          })
        }         

      }
      this.editePushObj('发布_写字楼')
    }else if(this.data.houseType == '厂房仓库'){
      if (this.data.chooseType == "楼层") {
        
        let pfloor = "publishObj.floor"
        let pfloorStart = "publishObj.floor_start"
        let pfloorEnd = "publishObj.floor_end"
        let pfloorTotal = "publishObj.floor_total"

        let pfloorSArr = "publishObj.floorSArr"
        let pfloorDArr = "publishObj.floorDArr"

        let floor = ''
        let sigStart = ''
        let sigEnd = ''
        let floorStart = ''
        let floorEnd = ''
        let floorTotal = ''

        if (!this.data.publishObj.floor_is_yc) {
          console.log('单')
          sigStart = parseInt(this.data.signleLayArr[0][val[0]].substr(0))
          sigEnd = parseInt(this.data.signleLayArr[1][val[1]].substr(1))
          floor = sigStart + "/" + sigEnd

          this.setData({
            showArr: [
            { 'name': '楼层', 'value': floor }],
            topArr: [
            { 'name': '楼层', 'value': floor }],
            [pfloor]: floor,
            [pfloorStart]: floorStart,
            [pfloorEnd]: floorEnd,
            [pfloorTotal]: floorTotal,
            [pfloorSArr]: val

          })

        } else {
          console.log('双')
          floorStart = parseInt(this.data.duobleLayArr[0][val[0]].substr(0))
          floorEnd = parseInt(this.data.duobleLayArr[1][val[1]].substr(0))
          floorTotal = parseInt(this.data.duobleLayArr[2][val[2]].substr(1))
          floor = floorStart + '-' + floorEnd + '/' + floorTotal

          this.setData({
            showArr: [
              { 'name': '楼层', 'value': floor }],
            topArr: [
              { 'name': '楼层', 'value': floor }],
            [pfloor]: floor,
            [pfloorStart]: floorStart,
            [pfloorEnd]: floorEnd,
            [pfloorTotal]: floorTotal,
            [pfloorDArr]: val

          })
        }         

      }
      this.editePushObj('发布_厂房仓库')
    }
    
    if(this.data.chooseType=='装修'){
      console.log('装修')
      let pfitment_name = "publishObj.fitment_name"

      var fitment_map = app.getUtil.cacheGet('initConfig').fitment_map
      let fitment_name = fitment_map[val[0]]


      this.setData({
        showArr:[{'name':'装修','value':fitment_name}],
        [pfitment_name]:fitment_name
      })
      this.editePushObj('发布_'+this.data.houseType)

    }

    if (this.data.chooseType == '租客性别'){

      var sex_map = app.getUtil.cacheGet('initConfig').sex_map
      let sex = sex_map[val[0]]
      let psex = "publishObj.sex"

      this.setData({
        showArr:[{'name':'租客性别','value':sex}],
        [psex]:sex
      })
      this.editePushObj("发布_"+this.data.houseType)
    }

    if (this.data.chooseType == '可注册公司'){

      let map = ["是", "否"]
      let judge = map[val[0]]
      let boolV = judge == "是" ? true:false
      let pregister_company = "publishObj.register_company"

      this.setData({
        showArr:[{'name':'可注册公司','value':judge}],
        [pregister_company]:boolV,
         showRegister:judge
      })
      this.editePushObj("发布_" + this.data.houseType)

    }

    
  },

//键盘点击事件
  keyBoardAction(e){
    let value = e.currentTarget.dataset.val;
    if(value=='cancel'){
      this.setData({
        isShowModel: 'hide',
      })

      // tempBuildingNum = '';
      // tempUnitNum = '';
      // tempRoomNum = '';

      return;
    }

    

    if(this.data.chooseType == '楼栋号'){
        tempBuildingNum += value
      
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })

    }else if(this.data.chooseType == '单元号'){
      tempUnitNum += value
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })
    }else if(this.data.chooseType == '室号'){
      tempRoomNum += value
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })
    }else if(this.data.chooseType == '面积'){
      tempAreaC += value
      this.setData({
        showArr:[{'name':'面积',"value":tempAreaC}]
      })

    }else if(this.data.chooseType == "月租金"){
      tempRentPriceC += value
      this.setData({
        showArr:[{'name':'月租金','value':tempRentPriceC}]
      })

    }else if(this.data.chooseType == '物业费'){
      tempFee += value
      this.setData({
        showArr:[{'name':'物业费','value':tempFee}]
      })
    }

  },

  keyBoardCancel(){

    if(this.data.chooseType == '楼栋号'){
      
      if(tempBuildingNum !=''){
        tempBuildingNum = tempBuildingNum.substring(0, tempBuildingNum.length-1)
        console.log(tempBuildingNum)
      }
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })
    }else if(this.data.chooseType == '单元号'){

      if (tempUnitNum != '') {
        tempUnitNum = tempUnitNum.substring(0, tempUnitNum.length - 1)
        console.log(tempUnitNum)
      }
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })

    }else if(this.data.chooseType == '室号'){

      if (tempRoomNum != '') {
        tempRoomNum = tempRoomNum.substring(0, tempRoomNum.length - 1)
        console.log(tempUnitNum)
      }
      this.setData({
        showArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': tempRoomNum }]
      })

    }else if(this.data.chooseType == '面积'){
      if(tempAreaC != ''){
        tempAreaC = tempAreaC.substring(0,tempAreaC.length-1)
      }
      this.setData({
        showArr: [{ 'name': '面积', 'value': tempAreaC}]
      })

    }else if(this.data.chooseType == '月租金'){
      if(tempRentPriceC !=''){
        tempRentPriceC = tempRentPriceC.substring(0,tempRentPriceC.length-1)
      }
      this.setData({
        showArr:[{'name':'月租金','value':tempRentPriceC}]
      })

    }else if(this.data.chooseType == '物业费'){
      
      if(tempFee !=''){
        tempFee = tempFee.substring(0,tempFee.length-1)
      }
      this.setData({
        showArr:[{'name':'物业费','value':tempFee}]
      })
    }



    console.log('cancel')
  },

  keyBoardSure(){
    
    let pbuilding_num = "publishObj.building_num"
    let punit_num = "publishObj.unit_num"
    let proom_num = "publishObj.room_num"
    if(this.data.chooseType == '楼栋号'){

      // if(tempBuildingNum == ''){

      //   wx.showToast({
      //     title: '请输入楼栋号',
      //     icon: 'none',
      //     duration: 1000
      //   })

      //   return;
      // }

      this.setData({
        [pbuilding_num]: tempBuildingNum,
        bottomArr: [{ 'name': '楼栋号', 'value': tempBuildingNum }, { 'name': '单元号', 'value': this.data.publishObj.unit_num }, { 'name': '室号', 'value': this.data.publishObj.room_num }]
      })
      if(this.data.publishObj.unit_num==''){

        this.clickFunction('单元号')
        
      } else if (this.data.publishObj.unit_num != ''&&this.data.publishObj.room_num==""){
        this.clickFunction('室号')
      }

    }else if(this.data.chooseType == '单元号'){

      // if (tempUnitNum == '') {

      //   wx.showToast({
      //     title: '请输入单元号',
      //     icon: 'none',
      //     duration: 1000
      //   })

      //   return;
      // }
      this.setData({
        [punit_num]: tempUnitNum,
        bottomArr: [{ 'name': '楼栋号', 'value': this.data.publishObj.building_num }, { 'name': '单元号', 'value': tempUnitNum }, { 'name': '室号', 'value': this.data.publishObj.room_num }]
      })

      if(this.data.publishObj.room_num==''){

        this.clickFunction('室号')
      }else if(this.data.publishObj.room_num!='' && this.data.publishObj.building_num==''){
        this.clickFunction('楼栋号')
      }


    }else if(this.data.chooseType == "室号"){

      // if (tempRoomNum == '') {

      //   wx.showToast({
      //     title: '请输入室号',
      //     icon: 'none',
      //     duration: 1000
      //   })

      //   return;
      // }

      this.setData({
        [proom_num] :tempRoomNum,
        bottomArr: [{ 'name': '楼栋号', 'value': this.data.publishObj.building_num }, { 'name': '单元号', 'value': this.data.publishObj.unit_num}, { 'name': '室号', 'value': tempRoomNum }]
      })

      if(this.data.publishObj.building_num==''){
        this.clickFunction('楼栋号')
      }else if(this.data.publishObj.building_num!=''&&this.data.publishObj.unit_num==''){
        this.clickFunction('单元号')
      }

    } else if (this.data.chooseType == '面积') {
      
      if(tempAreaC == '') {

        wx.showToast({
          title: '请输入面积',
          icon: 'none',
          duration: 1000
        })

        return;
      }

      if (this.data.moreChoose == '' && (this.data.houseType == '住宅' || this.data.houseType == '别墅')){

        wx.showToast({
          title: '请选择卧室类型',
          icon: 'none',
          duration: 1000
        })

        return;
      }

      let area = 'publishObj.build_area'
      let room_type = "publishObj.room_type"

      this.setData({

        [area]:tempAreaC,
        [room_type]:this.data.moreChoose,
        isShowModel: 'hide'

      })

    } else if (this.data.chooseType == '月租金') {

      if(tempRentPriceC == ''){

        wx.showToast({
          title: '请输入月租金',
          icon: 'none',
          duration: 1000
        })

        return;
      }

      if (this.data.moreChoose == '') {

        wx.showToast({
          title: '请选择付款类型',
          icon: 'none',
          duration: 1000
        })

        return;
      }

      let price= 'publishObj.price'
      let price_type = "publishObj.price_type"
      let price_unit = "publishObj.price_unit"

      this.setData({
        [price]:tempRentPriceC,
        [price_type]:this.data.moreChoose,
        [price_unit]:tempPriceUnit,
        isShowModel: 'hide'
        
      })

    } else if (this.data.chooseType == '物业费') {

      if (tempFee == '') {
        wx.showToast({
          title: '请输入物业费',
          icon: 'none',
          duration: 1000
        })
        return;
      }

      let fee = "publishObj.fee"
      this.setData({
        [fee]:tempFee,
        isShowModel: 'hide'
        
      })

    }

    this.editePushObj("发布_"+this.data.houseType)

  },

//列表表确定
  
  listSureAction(){
    console.log(this.data.houseType)
    console.log(this.data.chooseType)

    if (this.data.houseType=="住宅" && this.data.chooseType=="户型"){

      if(this.data.publishObj.forward_name==''){
        this.clickFunction('朝向')
      } else if (this.data.publishObj.forward_name != ''&&this.data.publishObj.floor==''&&this.data.publishObj.floor_start==''){
        console.log('楼层')
        this.clickFunction('楼层')
      }else{
        this.setData({
          isShowModel:'hide'
        })
      }
    }

  },

  radioChange(e){

    let floor_is_yc = "publishObj.floor_is_yc"
    let price_unit = "publishObj.price_unit"

    let pfloor = "publishObj.floor"
    let pfloorStart = "publishObj.floor_start"
    let pfloorEnd = "publishObj.floor_end"
    let pfloorTotal = "publishObj.floor_total"

    let pfloorSArr = "publishObj.floorSArr"
    let pfloorDArr = "publishObj.floorDArr"

    let allType = this.data.publishObj.room + this.data.publishObj.hall + this.data.publishObj.toilet;

    if (this.data.houseType == '住宅') {

      if (e.detail.value == '单层') {
        // let floor = this.data.publishObj.floor
        let floor = ''
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.signleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层', checked: 'true' },
            { name: '跃层', value: '跃层' }
          ],
          [floor_is_yc] : false,
          showArr: [{ 'name': '户型', 'value': allType },
          { 'name': '朝向', 'value': this.data.publishObj.forward_name },
          { 'name': '楼层', 'value': floor }],
          topArr: [{ 'name': '户型', 'value': allType },
          { 'name': '朝向', 'value': this.data.publishObj.forward_name },
          { 'name': '楼层', 'value': floor }],
          [pfloorStart]:'',
          [pfloorEnd] :'',
          [pfloorTotal] : "",
          [pfloor]:'',
          value:[1,1],

          [pfloorSArr]: [1, 1],//默认单层选中
          // [floorDArr]: [0, 1, 1],//默认跃层选中
          

        })

      } else if (e.detail.value == '跃层') {

        // let floor = this.data.publishObj.floor_start ? this.data.publishObj.floor_start + "-" + this.data.publishObj.floor_end + '/' + this.data.publishObj.floor_total : ''
        let floor = ''
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.duobleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层' },
            { name: '跃层', value: '跃层', checked: 'true' }
          ],
          [floor_is_yc] : true,
          showArr: [{ 'name': '户型', 'value': allType },
          { 'name': '朝向', 'value': this.data.publishObj.forward_name },
          { 'name': '楼层', 'value': floor }],
          topArr: [{ 'name': '户型', 'value': allType },
          { 'name': '朝向', 'value': this.data.publishObj.forward_name },
          { 'name': '楼层', 'value': floor }],
          [pfloor]:'',
          [pfloorStart]: '',
          [pfloorEnd]: '',
          [pfloorTotal]: "",
          value: [0, 1, 1],
          [pfloorDArr]: [0, 1, 1]

        })
      }
      this.editePushObj('发布_住宅')
    }else if(this.data.houseType == '别墅'){
      let floor=''
      if (e.detail.value == '单层') {
      this.setData({
        chooseFloorType: e.detail.value,
        listNum: this.data.signleLayArr,
        floorType: [//弹窗选择单层还是跃层
          { name: '单层', value: '单层', checked: 'true' },
          { name: '跃层', value: '跃层' }
        ],
        showArr: [{ 'name': '户型', 'value': allType },
        { 'name': '朝向', 'value': this.data.publishObj.forward_name },
        { 'name': '楼层', 'value': floor }],
        topArr: [{ 'name': '户型', 'value': allType },
        { 'name': '朝向', 'value': this.data.publishObj.forward_name },
        { 'name': '楼层', 'value': floor }],
        [floor_is_yc]: false,
        [pfloor]: '',
        [pfloorStart]: '',
        [pfloorEnd]: '',
        [pfloorTotal]: "",
        value: [1, 1],

        [pfloorSArr]: [1, 1],//默认单层选中

      })

      } else if (e.detail.value == '跃层') {
      this.setData({
        chooseFloorType: e.detail.value,
        listNum: this.data.duobleLayArr,
        floorType: [//弹窗选择单层还是跃层
          { name: '单层', value: '单层' },
          { name: '跃层', value: '跃层', checked: 'true' }
        ],
        showArr: [{ 'name': '户型', 'value': allType },
        { 'name': '朝向', 'value': this.data.publishObj.forward_name },
        { 'name': '楼层', 'value': floor }],
        topArr: [{ 'name': '户型', 'value': allType },
        { 'name': '朝向', 'value': this.data.publishObj.forward_name },
        { 'name': '楼层', 'value': floor }],
        [floor_is_yc]: true,
        [pfloor]: '',
        [pfloorStart]: '',
        [pfloorEnd]: '',
        [pfloorTotal]: "",
        value: [0, 1, 1],
        [pfloorDArr]: [0, 1, 1]

      })
    }
    this.editePushObj('发布_别墅')

    }else if(this.data.houseType == '商铺'){

      if (e.detail.value == '单层') {
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.signleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层', checked: 'true' },
            { name: '跃层', value: '跃层' }
          ],
          showArr: [{ 'name': '商业类型', 'value': this.data.publishObj.shop_type },
          { 'name': '楼层', 'value': floor }],
          topArr: [
            { 'name': '商业类型', 'value': this.data.publishObj.shop_type },
          { 'name': '楼层', 'value': floor }],
          [floor_is_yc]: false,
          [pfloor]: '',
          [pfloorStart]: '',
          [pfloorEnd]: '',
          [pfloorTotal]: "",
          value: [1, 1],

          [pfloorSArr]: [1, 1],//默认单层选中

        })

      } else if (e.detail.value == '跃层') {
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.duobleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层' },
            { name: '跃层', value: '跃层', checked: 'true' }
          ],
          showArr: [
            { 'name': '商业类型', 'value':this.data.publishObj.shop_type },{ 'name': '楼层', 'value': floor }],
          topArr: [
            { 'name': '商业类型', 'value': this.data.publishObj.shop_type },
            { 'name': '楼层', 'value': floor }],
          [floor_is_yc]: true,
          [pfloor]: '',
          [pfloorStart]: '',
          [pfloorEnd]: '',
          [pfloorTotal]: "",
          value: [0, 1, 1],
          [pfloorDArr]: [0, 1, 1]

        })
      }
      this.editePushObj('发布_商铺')

    } else if (this.data.houseType == '写字楼') {

      if (e.detail.value == '单层') {
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.signleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层', checked: 'true' },
            { name: '跃层', value: '跃层' }
          ],
          showArr: [
            { 'name': '楼层', 'value': floor }],
          topArr: [
            
            { 'name': '楼层', 'value': floor }],
          [floor_is_yc]: false,
          [pfloor]: '',
          [pfloorStart]: '',
          [pfloorEnd]: '',
          [pfloorTotal]: "",
          value: [1, 1],
          [pfloorSArr]: [1, 1],//默认单层选中
          

        })

      } else if (e.detail.value == '跃层') {
        this.setData({
          chooseFloorType: e.detail.value,
          listNum: this.data.duobleLayArr,
          floorType: [//弹窗选择单层还是跃层
            { name: '单层', value: '单层' },
            { name: '跃层', value: '跃层', checked: 'true' }
          ],
          showArr: [
            { 'name': '楼层', 'value': floor }],
          topArr: [
            
            { 'name': '楼层', 'value': floor }],
          [floor_is_yc]: true,
          [pfloor]: '',
          [pfloorStart]: '',
          [pfloorEnd]: '',
          [pfloorTotal]: "",
          value: [0, 1, 1],
          [pfloorDArr]: [0, 1, 1]

        })
      }
      this.editePushObj('发布_写字楼')

    } 
    // else if (this.data.houseType == '厂房仓库') {

    // } else if (this.data.houseType == '车库车位') {

    // }

    
    if(this.houseType=='商铺'){
        if(e.detail.value == '按月'){
          tempPriceUnit='1'
          this.setData({
            
            unitType: [{ name: '按月', 'value': '按月', checked: 'true' },
                        { name: '按天', 'value': '按天'}],
           
          })
        }else if(e.detail.value == '按天'){
          tempPriceUnit = '2'
          this.setData({
            unitType: [{ name: '按月', 'value': '按月'},
              { name: '按天', 'value': '按天', checked: 'true'}],
            [price_unit]: '2'
          })
        }

      this.editePushObj('发布_商铺')
    }else if(this.houseType=='写字楼'){
          tempPriceUnit = '1'
          if (e.detail.value == '按月') {

            this.setData({

              unitType: [{ name: '按月', 'value': '按月', checked: 'true' },
              { name: '按天', 'value': '按天' }],
              // [price_unit]: '1'//'元/月'
            })
          } else if (e.detail.value == '按天') {
            tempPriceUnit = '2'
            this.setData({
              unitType: [{ name: '按月', 'value': '按月' },
              { name: '按天', 'value': '按天', checked: 'true' }],
              // [price_unit]:'2' //'元/天*平方米'
            })
          }

      this.editePushObj('发布_写字楼')
        }
    
    console.log(e);

  },

  moreChooseAction(e){

    console.log(e.currentTarget.dataset.value)
    if(this.data.chooseType == '面积'){
      // tempAreaC = e.currentTarget.dataset.value;
      
      this.setData({
        // [room_type]: e.currentTarget.dataset.value,
        moreChoose: e.currentTarget.dataset.value

      })

    }else if(this.data.chooseType == '月租金'){
      // tempRentPriceC = e.currentTarget.dataset.value;
      let price_type = "publishObj.price_type"
      this.setData({
        moreChoose: e.currentTarget.dataset.value
      })
    }
    
  }
,
  nextStep(){
    wx.navigateTo({
      url: '/taofang-package/pages/publish-form/publish-step-2/publish-step-2'
    })

  }
});

//创建一个方法，返回value值对应的key

function findKey(obj, value, compare = (a, b) => a === b) {

  return Object.keys(obj).find(k => compare(obj[k], value))
}


